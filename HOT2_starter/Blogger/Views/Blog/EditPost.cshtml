@model Blogger.Models.BlogPost
@{
  ViewBag.Title = "My Personal Blog: Edit Blog Post";

}

<div class="card container">
  <div class="bg-light p-3">
    <h3>@ViewBag.Title</h3>
  </div>


  @using (Html.BeginForm("SubmitPost", "Blog"))
  {
    @Html.ValidationSummary(true,null, new { @class = "text-danger" })
    @Html.HiddenFor(x => x.BlogPostId)
    @Html.HiddenFor(x=> x.Posted)
    <div class="p-3">
      <div class="form-group">
        @Html.LabelFor(x => x.Title)
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger" })
      </div>
      <div class="form-group">
        @Html.LabelFor(x => x.Posted)
        @Html.TextBoxFor(x => x.Posted, new { @class = "form-control", rows = 1 })
        @Html.ValidationMessageFor(x => x.Posted, null, new { @class = "text-danger" })
      </div>
      <div class="form-group">
        @Html.LabelFor(x => x.Text)
        @Html.TextAreaFor(x => x.Text, new { @class = "form-control", rows = 3 })
        @Html.ValidationMessageFor(x => x.Text, null, new { @class = "text-danger" })
      </div>

    </div>
    <div class="bg-light p-3">
      <button type="submit" class="btn btn-primary">Save</button>
      @Html.ActionLink("Cancel and return to Blog", "EditPost", null,
              htmlAttributes: new { @class = "btn btn-secondary" })
    </div>
  }
</div>