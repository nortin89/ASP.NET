What is the Seperation of Concerns principal?

Can you build a View without having a Model? 

No. If you split it up horizonally then you won't have 3 people working on code. 
Everyone is safe working in their buckets. If they change code it won't mess up someone elses code. 

Controller: Business Logic

If we split it up vertically we can deliver functionality faster,don't have to wait for all 3 to show code.
If we split it up horizontally we have to wait for all 3 people to finish.


Seperation of Concerns(a reason for change) we want to limit the number of models. 
If someone has a new feature you want to be able to change a few things vs 20 different things.

EX: Currently tracking phone numbers.You need to add a new number. What files will you have to change?
The Controllers need to change for an additional piece of data.

Why is it important?


What responsibilities do Views have in MVC websites?
Presentation logic. To turn the model into something the user can see. What are we showing the users? We are showing data to users. 

What responsibilities do Controllers have in MVC websites?
Passing data from the View to the Model. Handles most of the business logic. Also involved in the routing process. 
Controller gets data first. It recieves request inputs go to Controller first. First thing Controller does when recieves data? First line
in Method is check if Model state is valid. Taking in data validating it and processing it.  

What responsibilities do Models have MVC websites?
Its all about the data. What sets that layer apart from the other 2(View, Controller)?
Responsible for reading the file and writing that file. Responsible for know what format data is saved.
views don't save data. Controllers don't do that either validation happens here. They can initiate data but they don't save data. 
EX: Emails are generally considered unique. If Controller doesn't actually check and the Model just saves it. They will get error message.
Presentation logic Business logic

What is Test-Driven-Development (TDD)?
Write test of any sort first. 
When we write test we determine what is important to the user. Test-Driven-Development usually uses Unit Test. But doesn't have to.


How is it different from how developers would normally write code? What are the pros and cons of practicing TDD?

